Error.stackTraceLimit = Infinityimport 'babel-polyfill'import 'es6-shim'import 'reflect-metadata'import 'zone.js/dist/zone'import 'zone.js/dist/long-stack-trace-zone'import 'zone.js/dist/async-test'import 'zone.js/dist/fake-async-test'import 'zone.js/dist/sync-test'import 'zone.js/dist/proxy'import 'zone.js/dist/jasmine-patch'import testing from '@angular/core/testing'import browser from '@angular/platform-browser-dynamic/testing'testing.TestBed.initTestEnvironment(  browser.BrowserDynamicTestingModule,  browser.platformBrowserDynamicTesting())/* Ok, this is kinda crazy. We can use the the context method on require that webpack created in order to tell webpack what files we actually want to require or import. Below, context will be an function/object with file names as keys. using that regex we are saying look in client/app and find any file that ends with spec.js and get its path. By passing in true we say do this recursively */var appContext = require.context('./test', true, /\.spec\.ts/)// get all the files, for each file, call the context function// that will require the file and load it up here. Context will// loop and require those spec files hereappContext.keys().forEach(appContext)